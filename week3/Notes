
1. Introduce AWS CLI
    IAM and secrets configuration

[default]
aws_access_key_id = AKIAigg6AFPILQR7Y52KSU6
aws_secret_access_key = BWaLrPnsQ5FSW0tiMgfgfgNPI9UZ4jVu2EpUN8yB9hpPU

aws ec2 run-instances --image-id ami-0b0af3577fe5e3532 --count 1 --instance-type t2.micro --key-name mcc-key --region us-east-1 


aws ec2 describe-instances --region us-east-1 --filters "Name=instance-type,Values=t2.micro" --query "Reservations[].Instances[].InstanceId" | grep i-0dc06fd42d548254b


aws ec2 terminate-instances --region us-east-1 --instance-ids i-0dc06fd42d548254b


2. Introduce IAC
    -- What is terraform? It is an “infrastructure as code” tool similar to AWS CloudFormation that allows you to create, update, and version your Amazon Web Services (AWS) infrastructure
    -- installing Terraform
    -- Installing an IDEA - Atom, and Visual Studio Code

3. Terraform Concepts - With Terraform you can have IaC with most cloud providers. So that your infrastructure can be versioned just like your application code. Hence you can also have CI/CD pipelines for your infrastructure.

    -- CI/CD -
            code --> commit --> push --> build (plan) --> test(validate | lint) --> further tests [tfsec] (Static Code Analysis)  --> Tag and Release (Terraform apply)

    -- Providers/Plugins - How does Terrform work with different cloud providers?

    The Terraform AWS provider is a plugin for Terraform that allows for the full lifecycle management of AWS resources

    Plugins is how you develop providers. For example, AWS provider is implemented as a plugin in go programming language into terraform

    So, as an end-user you are using AWS provider. But if you want to contribute to the provider, and implement or fix bugs in it, you will be doing this in in a context of a plugin in go language

    Source code of the AWS provider - https://github.com/hashicorp/terraform-provider-aws


    https://registry.terraform.io/search/providers
    
    -- Idempotency

    
4. Begin terraform 
   -- HCL
   -- Terraform CLI - init, plan, apply
   -- Provider and VPC
   -- Resource, Arguments and Attributes 
   -- Statefile
   -- and other Networking
   -- Interpolation
